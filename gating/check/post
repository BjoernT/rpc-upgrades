#!/bin/bash

## Shell Opts ----------------------------------------------------------------

set -euv
set -o pipefail

## Vars ----------------------------------------------------------------------

# These vars are set by the CI environment, but are given defaults
# here to cater for situations where someone is executing the test
# outside of the CI environment.
export RE_HOOK_ARTIFACT_DIR="${RE_HOOK_ARTIFACT_DIR:-/tmp/artifacts}"
export RE_HOOK_RESULT_DIR="${RE_HOOK_RESULT_DIR:-/tmp/results}"
export RE_JOB_CONTEXT=`echo ${RE_JOB_ACTION} | awk -F'_' {'print $1'}`
export RE_JOB_UPGRADE_TO=`echo ${RE_JOB_ACTION} | awk -F'_' {'print $3'}`
export RE_JOB_UPGRADE_ACTION=`echo ${RE_JOB_ACTION} | awk -F'_' {'print $4'}`
export RE_JOB_TESTING_ACTION=`echo ${RE_JOB_ACTION} | awk -F'_' {'print $5'}`

## Functions -----------------------------------------------------------------
export BASE_DIR=${BASE_DIR:-"/opt/rpc-openstack"}
source ${BASE_DIR}/scripts/functions.sh

## Main ----------------------------------------------------------------------

if [ $RE_JOB_TESTING_ACTION == "system" ]; then
  bash -c "$(readlink -f $(dirname ${0})/post_send_junit_to_qtest.sh)"
fi

echo "#### BEGIN LOG COLLECTION ###"

collect_logs_cmd="ansible-playbook"
collect_logs_cmd+=" --ssh-common-args='-o StrictHostKeyChecking=no'"
collect_logs_cmd+=" --extra-vars='artifacts_dir=${RE_HOOK_ARTIFACT_DIR}'"
collect_logs_cmd+=" --extra-vars='result_dir=${RE_HOOK_RESULT_DIR}'"

if [[ $RE_JOB_IMAGE =~ .*mnaio.* ]]; then
  collect_logs_cmd+=" --extra-vars='target_hosts=pxe_servers'"
  collect_logs_cmd+=" --inventory='/opt/openstack-ansible-ops/multi-node-aio/playbooks/inventory/hosts'"
else
  collect_logs_cmd+=" --extra-vars='target_hosts=localhost'"
fi

collect_logs_cmd+=" $(dirname ${0})/collect_logs.yml"

eval $collect_logs_cmd || true

echo "#### END LOG COLLECTION ###"

if [[ ${RE_JOB_IMAGE} =~ .*mnaio.* ]] && [[ ${RE_JOB_UPGRADE_ACTION} == "snapcap" ]] && [[ "${RE_JOB_STATUS:-SUCCESS}" == "SUCCESS" ]]; then
  echo "Preparing machine image artifacts."
  pushd /opt/openstack-ansible-ops/multi-node-aio
    ansible-playbook -vv -i ${MNAIO_INVENTORY:-"playbooks/inventory"} playbooks/save-vms.yml
  popd

  echo "Deleting unnecessary image files to prevent artifacting them."
  find /data/images -name \*.img -not -name \*-base.img -delete

  echo "Moving files to named folder for artifact upload."
  mv /data/images /data/${RE_JOB_CONTEXT}-${RE_JOB_IMAGE}-${RE_JOB_SCENARIO}

  echo "Preparing machine image artifact upload configuration."
  cat > component_metadata.yml <<EOF
"artifacts": [
  {
    "type": "file",
    "source": "/data/${RE_JOB_CONTEXT}-${RE_JOB_IMAGE}-${RE_JOB_SCENARIO}"
  }
]
EOF
fi
